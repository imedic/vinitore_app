// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vinitore.Infrastructure;

namespace Vinitore.Infrastructure.Migrations
{
    [DbContext(typeof(VinitoreContext))]
    partial class VinitoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-preview1-35029")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Vinitore.Infrastructure.DbModel.BarrelTb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capacity");

                    b.Property<int>("CurrentCapacity");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.Property<int>("WineId");

                    b.HasKey("Id");

                    b.HasIndex("WineId");

                    b.ToTable("barrel","public");
                });

            modelBuilder.Entity("Vinitore.Infrastructure.DbModel.TransferTb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<int>("BarrelFromId");

                    b.Property<int>("BarrelToId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("WineId");

                    b.HasKey("Id");

                    b.HasIndex("BarrelFromId");

                    b.HasIndex("BarrelToId");

                    b.HasIndex("WineId");

                    b.ToTable("transfers","public");
                });

            modelBuilder.Entity("Vinitore.Infrastructure.DbModel.WineTb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("wine_id");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<int>("Type")
                        .HasColumnName("type");

                    b.Property<int>("Year")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("wine","public");
                });

            modelBuilder.Entity("Vinitore.Infrastructure.DbModel.BarrelTb", b =>
                {
                    b.HasOne("Vinitore.Infrastructure.DbModel.WineTb", "Wine")
                        .WithMany("Barrels")
                        .HasForeignKey("WineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vinitore.Infrastructure.DbModel.TransferTb", b =>
                {
                    b.HasOne("Vinitore.Infrastructure.DbModel.BarrelTb", "BarrelFrom")
                        .WithMany()
                        .HasForeignKey("BarrelFromId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Vinitore.Infrastructure.DbModel.BarrelTb", "BarrelTo")
                        .WithMany()
                        .HasForeignKey("BarrelToId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Vinitore.Infrastructure.DbModel.WineTb", "Wine")
                        .WithMany()
                        .HasForeignKey("WineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
